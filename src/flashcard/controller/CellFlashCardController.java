package flashcard.controller;

import com.jfoenix.controls.JFXButton;
import com.jfoenix.controls.JFXCheckBox;
import com.jfoenix.controls.JFXListCell;
import com.jfoenix.controls.JFXListView;
import flashcard.Database.DatabaseHandler;
import flashcard.animations.Shaker;
import flashcard.model.FlashCard;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Paint;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.SQLException;

public class CellFlashCardController extends JFXListCell<FlashCard> {
    //private FXMLLoader fxmlLoader;

    @FXML
    private Label labelText;

    @FXML
    private AnchorPane rootAnchorPane;

    @FXML
    private JFXCheckBox selected;

    @FXML
    private ImageView verBtn;

    @FXML
    private ImageView eliminarBtnImg;

    @FXML
    void initialize() throws SQLException {

    }
    @Override
    protected void updateItem(FlashCard myFlashCard, boolean empty) {
        super.updateItem(myFlashCard, empty);

        if (empty || myFlashCard == null) {
            setText(null);
            setGraphic(null);
        }else{
            FXMLLoader fxmlLoader = null; //to avoid issues, and update only the object selected
            if (fxmlLoader == null) {
                fxmlLoader = new FXMLLoader(getClass()
                        .getResource("/flashcard/view/cellFlashCard.fxml"));
                fxmlLoader.setController(this);

                try {
                    fxmlLoader.load();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }


                labelText.setText(myFlashCard.getAdelante());
                String fondo = myFlashCard.getColorFondo();
                rootAnchorPane.setStyle("-fx-background-color:"+myFlashCard.getColorFondo());

                labelText.setStyle("-fx-text-fill:"+myFlashCard.getColorLetra());

                rootAnchorPane.setId("juanAutoGenerated"+myFlashCard.getId());
                selected.setId("check-juanAutoGenerated"+myFlashCard.getId());

                selected.setSelected(myFlashCard.isSelected());

                myFlashCard.setAnchorPane(rootAnchorPane);

            setText(null);
            setGraphic(rootAnchorPane);

          selected.setOnAction(event->{
                System.out.println(selected.isSelected());
                System.out.println(myFlashCard.getAdelante());
                DatabaseHandler dbh = new DatabaseHandler();
//                if(selected.isSelected()){
//                    FlashCardController.flashCardController.addToSelection(myFlashCard);
//
//                }else{
//                    FlashCardController.flashCardController.removeToSelection(myFlashCard);
//                }

                myFlashCard.setSelected(selected.isSelected());
                dbh.updateIsSelected(myFlashCard);
                FlashCardController.flashCardController.addToSelect();
            });
          verBtn.addEventHandler(MouseEvent.MOUSE_CLICKED, event ->{
              verWindow(myFlashCard);
          });

          eliminarBtnImg.addEventHandler(MouseEvent.MOUSE_CLICKED, event ->{
              eliminar(myFlashCard);
          });

        }

    }

    public void verWindow(FlashCard flashCard){
        Shaker buttonShaker = new Shaker(verBtn);
        buttonShaker.shake();
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("/flashcard/view/verFlashCard.fxml"));

        try {
            loader.load();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Parent root = loader.getRoot();
        Stage stage = new Stage();
        stage.setScene(new Scene(root));
        stage.setResizable(false);
        stage.show();

        VerFlashCardController verFlashCardController = loader.getController();

        ObservableList<FlashCard> flashCardsSelect = FXCollections.observableArrayList();
        flashCardsSelect.addAll(flashCard);
        JFXListView<FlashCard> listViewSelectoion = new JFXListView<>();
        listViewSelectoion.setItems(flashCardsSelect);
        listViewSelectoion.setCellFactory(CellFlashCardController -> new CellFlashCardController());
        verFlashCardController.verOneFlashCard(listViewSelectoion);
    }

    public void eliminar(FlashCard flashCard){
        //DatabaseHandler dbh = new DatabaseHandler();
        //dbh.deleteFlashCard(flashCard);
        Shaker buttonShaker = new Shaker(verBtn);
        buttonShaker.shake();
        FXMLLoader loader = new FXMLLoader();
        loader.setLocation(getClass().getResource("/flashcard/view/verFlashCard.fxml"));

        try {
            loader.load();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Parent root = loader.getRoot();
        Stage stage = new Stage();
        stage.setScene(new Scene(root));
        stage.setResizable(false);
        stage.show();

        VerFlashCardController verFlashCardController = loader.getController();

        ObservableList<FlashCard> flashCardsSelect = FXCollections.observableArrayList();
        flashCardsSelect.addAll(flashCard);
        JFXListView<FlashCard> listViewSelectoion = new JFXListView<>();
        listViewSelectoion.setItems(flashCardsSelect);
        listViewSelectoion.setCellFactory(CellFlashCardController -> new CellFlashCardController());
        verFlashCardController.verEliminarFlashCard(listViewSelectoion);
    }
}
